<?php
// src/Blogger/BlogBundle/Entity/Post.php
namespace Blogger\BlogBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
/**
 * Blogger\BlogBundle\Entity\Post
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Blogger\BlogBundle\Entity\PostRepository")
 * @ORM\HasLifecycleCallbacks()
 */
class Post
{
	/**
	* @ORM\Id
	* @ORM\Column(type="integer")
	* @ORM\GeneratedValue(strategy="AUTO")
	*/
	protected $id;

	/**
	* @ORM\Column(type="text")
	*/
	protected $categoria;

	/**
	* @ORM\Column(type="text")
	*/
	protected $nombre;

	/**
	* @ORM\Column(type="text")
	*/
	protected $ingrediente;
	
	/**
	* @ORM\Column(type="text")
	*/
	protected $descripcion;

    /**
    * @ORM\OneToMany(targetEntity="Comment", mappedBy="post")
    */
    private $comments;    

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    public function __construct()
    {
        $this->comments = new ArrayCollection();

        $this->setDate(new \DateTime());
    }
    /**
     * Set categoria
     *
     * @param string $categoria
     * @return Post
     */
    public function setCategoria($categoria)
    {
        $this->categoria = $categoria;

        return $this;
    }

    /**
     * Get categoria
     *
     * @return string 
     */
    public function getCategoria()
    {
        return $this->categoria;
    }

    /**
     * Set nombre
     *
     * @param string $nombre
     * @return Post
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get nombre
     *
     * @return string 
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Set ingrediente
     *
     * @param string $ingrediente
     * @return Post
     */
    public function setIngrediente($ingrediente)
    {
        $this->ingrediente = $ingrediente;

        return $this;
    }

    /**
     * Get ingrediente
     *
     * @return string 
     */
    public function getIngrediente()
    {
        return $this->ingrediente;
    }

    /**
     * Set descripcion
     *
     * @param string $descripcion
     * @return Post
     */
    public function setDescripcion($descripcion)
    {
        $this->descripcion = $descripcion;

        return $this;
    }

    /**
     * Get body
     *
     * @return string 
     */
    public function getDescripcion($length = null)
    {
        if (false === is_null($length) && $length > 0 && strlen($this->descripcion) > $length)
        return substr($this->descripcion, 0, $length) . "(...)";
        else
        return $this->descripcion;
    }

    public function __toString()
    {
        return $this->getNombre();
    }

    /**
     * Add comments
     *
     * @param \Blogger\BlogBundle\Entity\Comment $comments
     * @return Post
     */
    public function addComment(\Blogger\BlogBundle\Entity\Comment $comments)
    {
        $this->comments[] = $comments;

        return $this;
    }

    /**
     * Remove comments
     *
     * @param \Blogger\BlogBundle\Entity\Comment $comments
     */
    public function removeComment(\Blogger\BlogBundle\Entity\Comment $comments)
    {
        $this->comments->removeElement($comments);
    }

    /**
     * Get comments
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getComments()
    {
        return $this->comments;
    }

    /**
     * Get countComments
     *
     * @return string
     */
    public function countComments()
    {
        return $this->comments->count();
    }
}
